# ansible/playbook.yml
---
- name: Install and configure Prometheus and Grafana
  hosts: monitoring
  become: yes
  tasks:
    # Update package repository
    - name: Update apt cache
      apt:
        update_cache: yes

    # Install Docker
    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    # Pull Prometheus Docker image
    - name: Pull Prometheus Docker image
      command: docker pull prom/prometheus

    # Pull Grafana Docker image
    - name: Pull Grafana Docker image
      command: docker pull grafana/grafana

    # Create Prometheus configuration file
    - name: Create Prometheus configuration directory
      file:
        path: /home/ubuntu/prometheus
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: Create Prometheus configuration file
      copy:
        dest: /home/ubuntu/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: "prometheus"
              static_configs:
                - targets: ["localhost:9090"]
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    # Run Prometheus container
    - name: Start Prometheus container
      command: >
        docker run -d --name prometheus
        -p 9090:9090
        -v /home/ubuntu/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        prom/prometheus

    # Run Grafana container
    - name: Start Grafana container
      command: >
        docker run -d --name grafana
        -p 3000:3000
        grafana/grafana

    # Install Python and pip
    - name: Install Python3 and pip & venv
      apt:
        name:
          - python3
          - python3-pip
          - python3.12-venv
        state: present

    # Install Git
    - name: Install Git
      apt:
        name: git
        state: present

    # Clone Git repository
    - name: Clone MLflow repository
      git:
        repo: "https://github.com/valentinpuillandre/mlflfow_2.git"
        dest: /home/ubuntu/mlflow
        version: master
        update: yes # if repo exists, update it
      # args:
      #   chdir: /home/ubuntu/mlflow

    - name: Install python3-venv package
      apt:
        name: python3.12-venv
        state: present
        update_cache: yes

        # Fix permissions for mlflow directory
    - name: Ensure ownership of mlflow directory
      file:
        path: /home/ubuntu/mlflow
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Build Docker image from Dockerfile
      command: >
        docker build . -t mlflow-boston-housing
      args:
        chdir: /home/ubuntu/mlflow


    - name: Run MLflow Boston Housing container
      command: >
        docker run -d -p 5000:5000 mlflow-boston-housing


    #     # Find the latest MLflow model artifacts
    # - name: Find the latest MLflow model artifacts
    #   shell: |
    #     find /home/ubuntu/mlflow/mlruns/0/ -type d -name "model" | sort | tail -1
    #   register: latest_model_path

    # - name: Debug latest_model_path.stdout
    #   debug:
    #     var: latest_model_path.stdout

    # # Serve the MLflow model using the correct path
    # - name: Serve the trained MLflow model
    #   become_user: ubuntu
    #   shell: >
    #     /home/ubuntu/mlflow_env/bin/mlflow models serve
    #     --model-uri {{ latest_model_path.stdout }}
    #     --port 8888 --no-conda
    #   args:
    #     executable: /bin/bash



